name: run-real-escalating
on:
  workflow_dispatch:
    inputs:
      trials:
        description: "Trials per seed"
        default: "3"
        type: string
      seeds:
        description: "Comma-separated seeds"
        default: "11,12"
        type: string
      model:
        description: "Groq model"
        type: choice
        default: llama-3.1-8b-instant
        options:
          - llama-3.1-8b-instant
          - llama-3.3-70b-versatile
jobs:
  real:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install light deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python - <<'PY'
          # stdlib-only runners; external deps handled in make
          PY
      - name: Run REAL escalating experiment
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          TRIALS: ${{ inputs.trials }}
          SEEDS: ${{ inputs.seeds }}
          REAL_MODEL: ${{ inputs.model }}
        run: |
          . .venv/bin/activate
          RUN_ID="real_${{ github.run_id }}_${{ github.run_attempt }}_$(date -u +%Y%m%d-%H%M%S)"
          export RUN_ID
          export RUN_DIR="results/${RUN_ID}"
          make real-escalating RUN_ID="${RUN_ID}"
      - name: Determine RUN_ID
        id: rid
        run: |
          RID="$(cat results/.run_id 2>/dev/null || true)"
          echo "run_id=$RID" >> "$GITHUB_OUTPUT"
          echo "RUN_ID=$RID"

      - name: Verify REAL artifacts
        if: ${{ steps.rid.outputs.run_id != '' }}
        env:
          RUN_ID: ${{ steps.rid.outputs.run_id }}
        run: |
          set -euxo pipefail
          echo "RUN_ID=${RUN_ID}"
          RUN_DIR="results/${RUN_ID}"
          test -s "${RUN_DIR}/index.html"
          test -s "${RUN_DIR}/summary.svg"
          test -s "${RUN_DIR}/summary.csv"
          if [ -f "${RUN_DIR}/summary_index.json" ]; then
            ls -l "${RUN_DIR}/summary_index.json"
          else
            echo "NOTE: summary_index.json not found (fallback path)"
          fi

      - name: Upload run artifacts
        if: ${{ always() && steps.rid.outputs.run_id != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: real-escalating-${{ steps.rid.outputs.run_id }}
          path: |
            results/${{ steps.rid.outputs.run_id }}/**
          if-no-files-found: error
          retention-days: 7

      - name: Upload latest artifacts
        if: ${{ always() && hashFiles('results/LATEST/index.html') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: latest-artifacts
          path: |
            results/LATEST/**
          if-no-files-found: ignore
          retention-days: 7
